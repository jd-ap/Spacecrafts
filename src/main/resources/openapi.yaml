openapi: 3.0.3
info:
  title: Swagger W2M travel - OpenAPI 3.0
  description: |-
    ## Technical proof
     API que permite hacer un mantenimiento CRUD de naves espaciales de series y películas.

    * Consultar todas las naves utilizando paginación.
    * Consultar una única nave por id.
    * Consultar todas las naves que contienen, en su nombre, el valor de un parámetro enviado en la petición. Por ejemplo, si enviamos “wing” devolverá “x-wing”.
    * Crear una nueva nave.
    * Modificar una nave.
    * Eliminar una nave.
  version: 0.1.0-SNAPSHOT
servers:
  - url: https://localhost/api/v1
tags:
  - name: spacecraft
    description: Operations about spacecraft
paths:
  /space/ships:
    get:
      tags:
        - spacecraft
      summary: Search all ships
      operationId: findAllShips
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: sort
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              type: string
              uniqueItems: true
              example: 'id:a'
              pattern: '^\w+[:a|:d]?$'
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Spacecraft'
        '204':
          description: 'successfully but your response is empty'
        '400':
          description: 'wrong parameters or request body'
        '404':
          description: 'Ship not found'
        '500':
          description: 'generic error'
    post:
      tags:
        - spacecraft
      summary: Create new ship
      operationId: createShip
      requestBody:
        description: Created spacecraft object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpacecraftCommand'
      responses:
        '201':
          description: 'successful operation'
        '400':
          description: 'wrong parameters or request body'
        '404':
          description: 'Ship not found'
        '500':
          description: 'generic error'
  /space/ships/{idShip}:
    get:
      tags:
        - spacecraft
      summary: Get ship by id
      operationId: getShipById
      parameters:
        - name: idShip
          in: path
          description: 'The identifier that needs to be fetched. '
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spacecraft'
        '400':
          description: 'wrong parameters or request body'
        '404':
          description: 'Ship not found'
        '500':
          description: 'generic error'
    put:
      tags:
        - spacecraft
      summary: Update ship
      operationId: updateShipById
      parameters:
        - name: idShip
          in: path
          description: identifier that need to be updated
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        description: Update an existent ship in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpacecraftCommand'
      responses:
        '200':
          description: 'successful operation'
        '400':
          description: 'wrong parameters or request body'
        '404':
          description: 'Ship not found'
        '500':
          description: 'generic error'
    delete:
      tags:
        - spacecraft
      summary: Delete a ship
      description: identifier that need to be deleted.
      operationId: deleteShipById
      parameters:
        - name: idShip
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '204':
          description: 'Ship not found'
        '400':
          description: 'invalid identifier supplied'
        '500':
          description: 'generic error'
  /space/ships/name/{nameShip}:
    get:
      tags:
        - spacecraft
      summary: Get ships list by a name
      operationId: getShipsByName
      parameters:
        - name: nameShip
          in: path
          description: 'The name that needs to be fetched. '
          required: true
          schema:
            type: string
            nullable: false
            minLength: 3
            maxLength: 64
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: sort
          in: query
          required: false
          description: ''
          schema:
            type: array
            items:
              type: string
              uniqueItems: true
              example: 'id:a'
              pattern: '^\w+[:a|:d]?$'
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Spacecraft'
        '400':
          description: 'invalid name supplied'
        '404':
          description: 'Ship not found'
        '500':
          description: 'generic error'
components:
  schemas:
    Spacecraft:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'Apolo'
          minLength: 3
          maxLength: 64
        active:
          type: boolean
          example: true
    SpacecraftCommand:
      type: object
      properties:
        name:
          type: string
          nullable: false
          example: 'Apolo'
          minLength: 3
          maxLength: 64